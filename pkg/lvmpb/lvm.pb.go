// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lvm.proto

package lvmpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SnapshotForVolumeRequest struct {
	VgName               string   `protobuf:"bytes,1,opt,name=vgName,proto3" json:"vgName,omitempty"`
	SnapshotID           string   `protobuf:"bytes,2,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"`
	S3Env                string   `protobuf:"bytes,3,opt,name=s3env,proto3" json:"s3env,omitempty"`
	Size                 string   `protobuf:"bytes,4,opt,name=size,proto3" json:"size,omitempty"`
	VolumeID             string   `protobuf:"bytes,5,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	Fstype               string   `protobuf:"bytes,6,opt,name=fstype,proto3" json:"fstype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotForVolumeRequest) Reset()         { *m = SnapshotForVolumeRequest{} }
func (m *SnapshotForVolumeRequest) String() string { return proto.CompactTextString(m) }
func (*SnapshotForVolumeRequest) ProtoMessage()    {}
func (*SnapshotForVolumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc5677814b58357, []int{0}
}

func (m *SnapshotForVolumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotForVolumeRequest.Unmarshal(m, b)
}
func (m *SnapshotForVolumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotForVolumeRequest.Marshal(b, m, deterministic)
}
func (m *SnapshotForVolumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotForVolumeRequest.Merge(m, src)
}
func (m *SnapshotForVolumeRequest) XXX_Size() int {
	return xxx_messageInfo_SnapshotForVolumeRequest.Size(m)
}
func (m *SnapshotForVolumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotForVolumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotForVolumeRequest proto.InternalMessageInfo

func (m *SnapshotForVolumeRequest) GetVgName() string {
	if m != nil {
		return m.VgName
	}
	return ""
}

func (m *SnapshotForVolumeRequest) GetSnapshotID() string {
	if m != nil {
		return m.SnapshotID
	}
	return ""
}

func (m *SnapshotForVolumeRequest) GetS3Env() string {
	if m != nil {
		return m.S3Env
	}
	return ""
}

func (m *SnapshotForVolumeRequest) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *SnapshotForVolumeRequest) GetVolumeID() string {
	if m != nil {
		return m.VolumeID
	}
	return ""
}

func (m *SnapshotForVolumeRequest) GetFstype() string {
	if m != nil {
		return m.Fstype
	}
	return ""
}

type Result struct {
	Size                 int32    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc5677814b58357, []int{1}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type ErrorReason struct {
	Reason               string   `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorReason) Reset()         { *m = ErrorReason{} }
func (m *ErrorReason) String() string { return proto.CompactTextString(m) }
func (*ErrorReason) ProtoMessage()    {}
func (*ErrorReason) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc5677814b58357, []int{2}
}

func (m *ErrorReason) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorReason.Unmarshal(m, b)
}
func (m *ErrorReason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorReason.Marshal(b, m, deterministic)
}
func (m *ErrorReason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorReason.Merge(m, src)
}
func (m *ErrorReason) XXX_Size() int {
	return xxx_messageInfo_ErrorReason.Size(m)
}
func (m *ErrorReason) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorReason.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorReason proto.InternalMessageInfo

func (m *ErrorReason) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type SnapshotForVolumeReply struct {
	Success              bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Result               *Result      `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Error                *ErrorReason `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SnapshotForVolumeReply) Reset()         { *m = SnapshotForVolumeReply{} }
func (m *SnapshotForVolumeReply) String() string { return proto.CompactTextString(m) }
func (*SnapshotForVolumeReply) ProtoMessage()    {}
func (*SnapshotForVolumeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc5677814b58357, []int{3}
}

func (m *SnapshotForVolumeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotForVolumeReply.Unmarshal(m, b)
}
func (m *SnapshotForVolumeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotForVolumeReply.Marshal(b, m, deterministic)
}
func (m *SnapshotForVolumeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotForVolumeReply.Merge(m, src)
}
func (m *SnapshotForVolumeReply) XXX_Size() int {
	return xxx_messageInfo_SnapshotForVolumeReply.Size(m)
}
func (m *SnapshotForVolumeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotForVolumeReply.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotForVolumeReply proto.InternalMessageInfo

func (m *SnapshotForVolumeReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SnapshotForVolumeReply) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *SnapshotForVolumeReply) GetError() *ErrorReason {
	if m != nil {
		return m.Error
	}
	return nil
}

type DeleteVolumeRequest struct {
	VolumeID             string   `protobuf:"bytes,1,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVolumeRequest) Reset()         { *m = DeleteVolumeRequest{} }
func (m *DeleteVolumeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVolumeRequest) ProtoMessage()    {}
func (*DeleteVolumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc5677814b58357, []int{4}
}

func (m *DeleteVolumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVolumeRequest.Unmarshal(m, b)
}
func (m *DeleteVolumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVolumeRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVolumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVolumeRequest.Merge(m, src)
}
func (m *DeleteVolumeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVolumeRequest.Size(m)
}
func (m *DeleteVolumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVolumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVolumeRequest proto.InternalMessageInfo

func (m *DeleteVolumeRequest) GetVolumeID() string {
	if m != nil {
		return m.VolumeID
	}
	return ""
}

type DeleteVolumeVolumeReply struct {
	Success              bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Result               *Result      `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Error                *ErrorReason `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeleteVolumeVolumeReply) Reset()         { *m = DeleteVolumeVolumeReply{} }
func (m *DeleteVolumeVolumeReply) String() string { return proto.CompactTextString(m) }
func (*DeleteVolumeVolumeReply) ProtoMessage()    {}
func (*DeleteVolumeVolumeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc5677814b58357, []int{5}
}

func (m *DeleteVolumeVolumeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVolumeVolumeReply.Unmarshal(m, b)
}
func (m *DeleteVolumeVolumeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVolumeVolumeReply.Marshal(b, m, deterministic)
}
func (m *DeleteVolumeVolumeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVolumeVolumeReply.Merge(m, src)
}
func (m *DeleteVolumeVolumeReply) XXX_Size() int {
	return xxx_messageInfo_DeleteVolumeVolumeReply.Size(m)
}
func (m *DeleteVolumeVolumeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVolumeVolumeReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVolumeVolumeReply proto.InternalMessageInfo

func (m *DeleteVolumeVolumeReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *DeleteVolumeVolumeReply) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *DeleteVolumeVolumeReply) GetError() *ErrorReason {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*SnapshotForVolumeRequest)(nil), "lvmpb.SnapshotForVolumeRequest")
	proto.RegisterType((*Result)(nil), "lvmpb.Result")
	proto.RegisterType((*ErrorReason)(nil), "lvmpb.ErrorReason")
	proto.RegisterType((*SnapshotForVolumeReply)(nil), "lvmpb.SnapshotForVolumeReply")
	proto.RegisterType((*DeleteVolumeRequest)(nil), "lvmpb.DeleteVolumeRequest")
	proto.RegisterType((*DeleteVolumeVolumeReply)(nil), "lvmpb.DeleteVolumeVolumeReply")
}

func init() { proto.RegisterFile("lvm.proto", fileDescriptor_8cc5677814b58357) }

var fileDescriptor_8cc5677814b58357 = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x53, 0xcb, 0x4a, 0xc3, 0x40,
	0x14, 0x35, 0x6d, 0x13, 0xdb, 0x5b, 0x5d, 0x78, 0x95, 0x3a, 0x04, 0xad, 0x12, 0x28, 0x74, 0x55,
	0x30, 0xfd, 0x83, 0x1a, 0x85, 0x42, 0x75, 0x11, 0xb1, 0xe0, 0x32, 0x2d, 0xd7, 0x07, 0x4c, 0x3a,
	0x31, 0x93, 0x04, 0xea, 0x56, 0xbf, 0xc4, 0x2f, 0xf0, 0x13, 0x25, 0x33, 0xd3, 0x92, 0x62, 0xbb,
	0x76, 0x37, 0xe7, 0x3e, 0xce, 0x3d, 0xe7, 0x90, 0x40, 0x8b, 0x17, 0xf1, 0x20, 0x49, 0x45, 0x26,
	0xd0, 0xe6, 0x45, 0x9c, 0xcc, 0xbc, 0x1f, 0x0b, 0xd8, 0xc3, 0x22, 0x4a, 0xe4, 0xab, 0xc8, 0x6e,
	0x45, 0x3a, 0x15, 0x3c, 0x8f, 0x29, 0xa4, 0xf7, 0x9c, 0x64, 0x86, 0x1d, 0x70, 0x8a, 0x97, 0xfb,
	0x28, 0x26, 0x66, 0x5d, 0x5a, 0xfd, 0x56, 0x68, 0x10, 0x76, 0x01, 0xa4, 0xd9, 0x19, 0x07, 0xac,
	0xa6, 0x7a, 0x95, 0x0a, 0x9e, 0x80, 0x2d, 0x87, 0xb4, 0x28, 0x58, 0x5d, 0xb5, 0x34, 0x40, 0x84,
	0x86, 0x7c, 0xfb, 0x20, 0xd6, 0x50, 0x45, 0xf5, 0x46, 0x17, 0x9a, 0x85, 0x3a, 0x39, 0x0e, 0x98,
	0xad, 0xea, 0x6b, 0x5c, 0x5e, 0x7f, 0x96, 0xd9, 0x32, 0x21, 0xe6, 0xe8, 0xeb, 0x1a, 0x79, 0x67,
	0xe0, 0x84, 0x24, 0x73, 0x9e, 0xad, 0x19, 0x4b, 0x75, 0xb6, 0x66, 0xf4, 0x7a, 0xd0, 0xbe, 0x49,
	0x53, 0x91, 0x86, 0x14, 0x49, 0xb1, 0x28, 0x49, 0x52, 0xf5, 0x5a, 0x59, 0xd0, 0xc8, 0xfb, 0xb4,
	0xa0, 0xb3, 0xc5, 0x77, 0xc2, 0x97, 0xc8, 0x60, 0x5f, 0xe6, 0xf3, 0x39, 0x49, 0xa9, 0x76, 0x9a,
	0xe1, 0x0a, 0x62, 0xaf, 0x24, 0x2b, 0x2f, 0x2b, 0xcf, 0x6d, 0xff, 0x70, 0xa0, 0x42, 0x1c, 0x68,
	0x39, 0xa1, 0x69, 0x62, 0x1f, 0x6c, 0x2a, 0x25, 0x28, 0xfb, 0x6d, 0x1f, 0xcd, 0x54, 0x45, 0x56,
	0xa8, 0x07, 0xbc, 0x2b, 0x38, 0x0e, 0x88, 0x53, 0x46, 0x9b, 0xb9, 0x57, 0x53, 0xb1, 0x36, 0x53,
	0xf1, 0xbe, 0x2c, 0x38, 0xad, 0xee, 0xfc, 0x8f, 0x72, 0x3f, 0x82, 0xe6, 0x2a, 0x3e, 0x7c, 0x84,
	0xa3, 0x3f, 0x51, 0xe2, 0x85, 0xd9, 0xdd, 0xf5, 0x71, 0xb9, 0xe7, 0xbb, 0x07, 0x12, 0xbe, 0xf4,
	0xf6, 0xfc, 0x27, 0x68, 0x4d, 0xa6, 0x77, 0x86, 0x6e, 0x02, 0x07, 0x55, 0xd7, 0xe8, 0x9a, 0xed,
	0x2d, 0xf1, 0xb9, 0xdd, 0x2d, 0xbd, 0x0d, 0xea, 0x91, 0xf3, 0x5d, 0xab, 0x5f, 0x07, 0xa3, 0x99,
	0xa3, 0xfe, 0x85, 0xe1, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3a, 0x35, 0x4a, 0xfb, 0x18, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SnapshotClient is the client API for Snapshot service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SnapshotClient interface {
	SnapshotForVolume(ctx context.Context, in *SnapshotForVolumeRequest, opts ...grpc.CallOption) (*SnapshotForVolumeReply, error)
}

type snapshotClient struct {
	cc *grpc.ClientConn
}

func NewSnapshotClient(cc *grpc.ClientConn) SnapshotClient {
	return &snapshotClient{cc}
}

func (c *snapshotClient) SnapshotForVolume(ctx context.Context, in *SnapshotForVolumeRequest, opts ...grpc.CallOption) (*SnapshotForVolumeReply, error) {
	out := new(SnapshotForVolumeReply)
	err := c.cc.Invoke(ctx, "/lvmpb.Snapshot/SnapshotForVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SnapshotServer is the server API for Snapshot service.
type SnapshotServer interface {
	SnapshotForVolume(context.Context, *SnapshotForVolumeRequest) (*SnapshotForVolumeReply, error)
}

// UnimplementedSnapshotServer can be embedded to have forward compatible implementations.
type UnimplementedSnapshotServer struct {
}

func (*UnimplementedSnapshotServer) SnapshotForVolume(ctx context.Context, req *SnapshotForVolumeRequest) (*SnapshotForVolumeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SnapshotForVolume not implemented")
}

func RegisterSnapshotServer(s *grpc.Server, srv SnapshotServer) {
	s.RegisterService(&_Snapshot_serviceDesc, srv)
}

func _Snapshot_SnapshotForVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotForVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotServer).SnapshotForVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lvmpb.Snapshot/SnapshotForVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotServer).SnapshotForVolume(ctx, req.(*SnapshotForVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Snapshot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lvmpb.Snapshot",
	HandlerType: (*SnapshotServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SnapshotForVolume",
			Handler:    _Snapshot_SnapshotForVolume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lvm.proto",
}

// LVMVolumeClient is the client API for LVMVolume service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LVMVolumeClient interface {
	DeleteVolume(ctx context.Context, in *DeleteVolumeRequest, opts ...grpc.CallOption) (*DeleteVolumeVolumeReply, error)
}

type lVMVolumeClient struct {
	cc *grpc.ClientConn
}

func NewLVMVolumeClient(cc *grpc.ClientConn) LVMVolumeClient {
	return &lVMVolumeClient{cc}
}

func (c *lVMVolumeClient) DeleteVolume(ctx context.Context, in *DeleteVolumeRequest, opts ...grpc.CallOption) (*DeleteVolumeVolumeReply, error) {
	out := new(DeleteVolumeVolumeReply)
	err := c.cc.Invoke(ctx, "/lvmpb.LVMVolume/DeleteVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LVMVolumeServer is the server API for LVMVolume service.
type LVMVolumeServer interface {
	DeleteVolume(context.Context, *DeleteVolumeRequest) (*DeleteVolumeVolumeReply, error)
}

// UnimplementedLVMVolumeServer can be embedded to have forward compatible implementations.
type UnimplementedLVMVolumeServer struct {
}

func (*UnimplementedLVMVolumeServer) DeleteVolume(ctx context.Context, req *DeleteVolumeRequest) (*DeleteVolumeVolumeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVolume not implemented")
}

func RegisterLVMVolumeServer(s *grpc.Server, srv LVMVolumeServer) {
	s.RegisterService(&_LVMVolume_serviceDesc, srv)
}

func _LVMVolume_DeleteVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LVMVolumeServer).DeleteVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lvmpb.LVMVolume/DeleteVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LVMVolumeServer).DeleteVolume(ctx, req.(*DeleteVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LVMVolume_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lvmpb.LVMVolume",
	HandlerType: (*LVMVolumeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteVolume",
			Handler:    _LVMVolume_DeleteVolume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lvm.proto",
}
